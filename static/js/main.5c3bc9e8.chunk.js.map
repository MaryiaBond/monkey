{"version":3,"sources":["components/common/FormControls/index.module.css","components/Profile/MyPosts/MyPosts.module.css","assets/img/user.jpg","components/Header/Header.module.css","components/Nav/UserOnline/User/User.module.css","components/Dialogs/MessageItem/Message/Message.module.css","components/common/Paginator/Paginator.module.css","redux/games-reducer.js","assets/img/space_monkey_logo.jpg","components/Nav/UserOnline/UserOnline.module.css","assets/img/user1.jpg","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.module.css","components/Dialogs/MessageItem/MessageItem.module.css","assets/img/loader.svg","assets/img/avatar2.jpg","components/Profile/ProfileInfo/ProfileStatus.module.css","components/Profile/MyPosts/Post/img/avatar1.jpg","components/Games/Games.module.css","components/Users/Users.module.css","components/Nav/Nav.module.css","serviceWorker.js","redux/dialogs-reducer.js","api/api.js","redux/profile-reducer.js","redux/navbar-reducer.js","utility/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Nav/UserOnline/User/User.jsx","components/Nav/UserOnline/UserOnline.jsx","components/Nav/UserOnline/UserOnlineContainer.jsx","components/Nav/Nav.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogItem/Item/Item.jsx","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/MessageItem/Message/Message.jsx","components/Dialogs/MessageItem/MessageItem.jsx","utility/validation/index.js","components/common/FormControls/index.js","components/Dialogs/TextArea/TextArea.jsx","redux/users-selectors.js","components/Dialogs/TextArea/TextAreaContainer.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","assets/common/Preloader/Preloader.jsx","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","components/Games/Games.jsx","hoc/withSuspense.jsx","App.js","index.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/TextArea/TextArea.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Login/Login.module.css","components/Dialogs/DialogItem/Item/Item.module.css"],"names":["module","exports","formControl","error","errorText","my_posts","post_area","reverse__post","__webpack_require__","p","header","login","user__block","user__img","messages","message","currentPage","pagination","initialState","animalShortNames","currentValue","currentPoints","currentLevel","currentSize","initializeGetPoint","dispatch","type","initializedPoint","setCurrentLevel","getCurrentLevel","setCurrentSize","getCurrentSize","gamesReducer","state","arguments","length","undefined","action","Object","C_Users_User_Documents_monkey_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","dialogs","dialog","active","status","gameBlock","user","usrName","rightClmn","leftClmn","row","wrapUsr","lInfo","rInfo","avaUsr","usrStatus","nav","item","settings","Boolean","window","location","hostname","match","dataMess","id","dialogMessageText","dataUser","name","listenMessage","dialogReducer","objectSpread","concat","toConsumableArray","newMess","instance","axios","withCredentials","baseURL","headers","API-KEY","userAPI","getUsers","pageSize","get","unfollowUsers","userId","delete","then","response","data","followUsers","post","profileAPI","put","formData","Content-Type","freindsAPI","pageNumber","totalUserCount","authAPI","email","password","rememberMe","myPosts","like","dislike","likeCount","count","profile","photo","setStatus","profileReducer","newPost","filter","userData","isFollowed","getFreindsNavbar","navBarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","apiMethod","actionCreator","wrap","_context2","prev","next","sent","resultCode","stop","_x2","_x3","_x4","_x5","apply","this","usersReducer","followed","isAuth","setAuthUserData","getAuthUserData","_response$data$data","authReducer","initialized","appReducer","reducers","combineReducers","dialogPage","profilePage","navBar","usersPage","auth","app","games","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","props","react_default","createElement","className","classes","src","img","react_router_dom","onClick","logout","to","HeaderContainer","components_Header_Header","React","Component","connect","User","_useState","useState","_useState2","slicedToArray","page","setPage","useEffect","onclick","userOnlineIMG","Redirect","UserOnline","dataOnlineUser","freindsOnline","online","Fragment","UserOnline_User_User","FreindOnline","getUsersOnline","Nav_UserOnline_UserOnline","freindsDataComponentContainer","withRouter","Nav","activeClassName","UserOnlineContainer","News","Music","Settings","Item","linkPath","dialog__item","username","DialogsItem","dataArr","DialogItem_Item_Item","Message","MessageItem","messData","mess","MessageItem_Message_Message","required","value","maxLength","lengthNumber","FormControl","_ref","input","_ref$meta","meta","touched","children","hasError","objectWithoutProperties","Textarea","restProps","child","FormControls_FormControl","assign","Input","adaptFileEventToValue","delegate","e","target","files","FileInput","_ref2$input","onChange","onBlur","maxLengthNumber20","TextAreaFormRedux","reduxForm","onSubmit","handleSubmit","area__mess","immutable","component","input__mess","validate","btn__add","TextArea","values","addMessage","getPageSize","getTotalUserCount","getCurrentPage","getToggleIfFetching","getFollowingProgress","getProfileInfo","getProfileStatus","getAuthUserId","getIsAuth","getDialogPage","getProfilePage","TextAreaContainer","addMessActionCreator","Dialogs","Dialogs_MessageItem_MessageItem","DialogItem_DialogsItem","TextArea_TextAreaContainer","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","Paginator","totalItemCount","onPageChanged","pageCount","Math","ceil","pages","i","push","currentLeftPage","setCurrentLeftPage","_useState3","_useState4","currentRightPage","setCurrentRightPage","lastPage","photos","small","userDefault","disabled","some","unfollow","follow","Users","common_Paginator_Paginator","Users_User","Preloader","preloader","UsersComponent","_this","getUsersAction","_this$props","common_Preloader_Preloader","components_Users_Users","UsersContainer","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","_callee","_context","totalCount","_x","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","currentTarget","prevProps","prevState","autoFocus","onDoubleClick","UploadPhotoFormRedux","Field","ProfileInfo","main_block","getPhoto","photoInput","alert","content_status","ProfileInfo_ProfileStatus","avatar","info","fullName","lookingForAJobDescription","contacts","instagram","Post","ava","post_text","maxLengthNumber10","MyPostsFormRedux","MyPosts","memo","dataPosts","MyPosts_Post_Post","newPostBody","addPost","MyPostsContainer","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","params","authorizedUserId","history","getUserProfile","getStatus","components_Profile_Profile","photoFile","FormData","append","LoginReduxForm","placeholder","checkbox","htmlFor","formHasError","label","Login","pass","LoginContainer","stopSubmit","_error","LoginPage","Games","withSuspense","Suspense","fallback","CatEatBradContainer","lazy","Promise","all","SpaceAnimalsContainer","App","initializeApp","Header_HeaderContainer","components_Nav_Nav","react_router","path","render","DialogsContainer","Profile_ProfileContainer","components_News_News","components_Music_Music","components_Games_Games","Users_UsersContainer","components_Settings_Settings","Login_LoginContainer","AppContainer","promise","MonkeySpaceApp","basename","process","react_redux_es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c3bc9e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2-bv1\",\"error\":\"FormControls_error__3Z-w8\",\"errorText\":\"FormControls_errorText__1w-_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_posts\":\"MyPosts_my_posts__2z2j7\",\"post_area\":\"MyPosts_post_area__3b_8L\",\"reverse__post\":\"MyPosts_reverse__post__l2-Qo\"};","module.exports = __webpack_public_path__ + \"static/media/user.5c1af95e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3QTBx\",\"login\":\"Header_login__3LE0_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__block\":\"User_user__block__5M-lm\",\"user__img\":\"User_user__img__1fthG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__NKNdy\",\"message\":\"Message_message__DCWeh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentPage\":\"Paginator_currentPage__2HQSe\",\"pagination\":\"Paginator_pagination__3PYAH\"};","const GET_TRUE_ANSWER = 'GET_TRUE_ANSWER';\r\nconst SET_CURRENT_LEVEL = 'SET_CURRENT_LEVEL';\r\nconst SET_CURRENT_SIZE = 'SET_CURRENT_SIZE';\r\nlet initialState = {\r\n    animalShortNames: [\"ленин\", \"жвачка\", \"плеер\", \"кассета\", \"пенопластик\", \"кухня\", \"бумага\", \"режим\", \"однослойность\", \"органомичность\", \"хелб\", \"шоколадно\", \"неизбежно\", \"кроссовки\", \"розетка\", \"угол\", \"лес\", \"сотона\", \"голод\", \"темнота\", \"схема\", \"окно\"],\r\n    currentValue: \"\",\r\n    currentPoints: 0,\r\n    currentLevel: 1,\r\n    currentSize: 3\r\n\r\n}\r\nconst gamesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_TRUE_ANSWER:\r\n            return {\r\n                ...state,\r\n                currentPoints: action.currentPoints\r\n            }\r\n        case SET_CURRENT_LEVEL:\r\n            return {\r\n                ...state,\r\n                currentLevel: action.currentLevel + 1\r\n            }\r\n\r\n        case SET_CURRENT_SIZE:\r\n            return {\r\n                ...state,\r\n                currentSize: action.currentSize + 1\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n//for animalSpace Game\r\nexport const initializedPoint = (currentPoints) => ({ type: GET_TRUE_ANSWER, currentPoints });\r\n\r\nexport const initializeGetPoint = (currentPoints) => (dispatch) => {\r\n    dispatch(initializedPoint(currentPoints))\r\n}\r\n\r\n//for catEatBrad Game\r\nexport const getCurrentLevel = (currentLevel) => ({ type: SET_CURRENT_LEVEL, currentLevel });\r\n\r\nexport const setCurrentLevel = (currentLevel) => (dispatch) => {\r\n    {\r\n        dispatch(getCurrentLevel(currentLevel))\r\n    }\r\n}\r\n\r\nexport const getCurrentSize = (currentSize) => ({ type: SET_CURRENT_SIZE, currentSize });\r\n\r\nexport const setCurrentSize = (currentSize) => (dispatch) => {\r\n    {\r\n        dispatch(getCurrentSize(currentSize))\r\n    }\r\n}\r\nexport default gamesReducer;","module.exports = __webpack_public_path__ + \"static/media/space_monkey_logo.ad893845.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__block\":\"UserOnline_user__block__2vmOp\"};","module.exports = __webpack_public_path__ + \"static/media/user1.4f4146d3.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__fgZvf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__3U77f\",\"active\":\"DialogsItem_active__7b4XW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"MessageItem_messages__3SZTK\"};","module.exports = __webpack_public_path__ + \"static/media/loader.2eb49705.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar2.ccd84487.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__1xTgH\"};","module.exports = __webpack_public_path__ + \"static/media/avatar1.9026aa4e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameBlock\":\"Games_gameBlock__dccZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Users_user__ThPS9\",\"usrName\":\"Users_usrName__34ZdR\",\"rightClmn\":\"Users_rightClmn__YvFGK\",\"leftClmn\":\"Users_leftClmn__1YXHK\",\"row\":\"Users_row__vpel1\",\"wrapUsr\":\"Users_wrapUsr__wk7nI\",\"lInfo\":\"Users_lInfo__237_a\",\"rInfo\":\"Users_rInfo__2u60X\",\"avaUsr\":\"Users_avaUsr__2KITK\",\"usrStatus\":\"Users_usrStatus__dK9y0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2r57b\",\"item\":\"Nav_item__3svAP\",\"settings\":\"Nav_settings__wk6ZJ\",\"active\":\"Nav_active__Nrw3L\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const LISTEN_NEW_MESS = 'LISTEN-NEW-MESS';\r\nconst ADD_MESS = 'ADD-MESS';\r\nlet initialState = {\r\n    dataMess: [\r\n        { id: 1, message: 'Hi, how are you' },\r\n        { id: 2, message: 'I`m fine' },\r\n        { id: 3, message: 'What will you do tomorrow?' },\r\n        { id: 4, message: 'I don`t know =)))' },\r\n    ],\r\n    dialogMessageText: [\r\n        { message: '' }\r\n    ],\r\n    dataUser: [\r\n        { id: 1, name: 'Jhon Doe' },\r\n        { id: 2, name: 'Jhon Fish' },\r\n        { id: 3, name: 'Jhon Potato' },\r\n        { id: 4, name: 'Jhon Tomato' },\r\n        { id: 5, name: 'Jhon Corn' },\r\n        { id: 6, name: 'Jhon Carrot' },\r\n    ],\r\n    listenMessage: 'ui'\r\n}\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESS:\r\n            return {\r\n                    ...state,\r\n                    listenMessage: '',\r\n                    dataMess: [...state.dataMess, {id: 10, message: action.newMess}]\r\n                }\r\n                // stateCopy.listenMessage = {text: ''};\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const addMessActionCreator = (newMess) => ({ type: ADD_MESS, newMess });\r\nexport default dialogReducer;"," import * as axios from 'axios';\r\n const instance = axios.create({\r\n     withCredentials: true,\r\n     baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n     headers: {\r\n         \"API-KEY\": \"12d60958-0eae-47eb-92e3-779df1111073\"\r\n     }\r\n })\r\n export const userAPI = {\r\n     getUsers(currentPage, pageSize) {\r\n         return instance.get('users?page=' + currentPage + '&count=' + pageSize);\r\n     },\r\n     unfollowUsers(userId) {\r\n         return instance.delete('follow/' + userId).\r\n         then(response => {\r\n             return response.data\r\n         })\r\n     },\r\n     followUsers(userId) {\r\n         return instance.post('follow/' + userId).\r\n         then(response => {\r\n             return response.data\r\n         })\r\n     }\r\n }\r\n export const profileAPI = {\r\n     getData(userId) {\r\n         return instance.get('profile/' + userId);\r\n     },\r\n     getStatus(userId) {\r\n         return instance.get('profile/status/' + userId);\r\n     },\r\n     updateStatus(status) {\r\n         return instance.put('profile/status', { status: status });\r\n     },\r\n     uploadPhoto(formData) {\r\n         return instance.post('profile/photo', formData, {\r\n             headers: {\r\n                 'Content-Type': 'multipart/form-data'\r\n             }\r\n         })\r\n     }\r\n }\r\n export const freindsAPI = {\r\n     getData(pageNumber, totalUserCount) {\r\n         return instance.get('users?page=' + pageNumber + '&count=' + totalUserCount).\r\n         then(response => {\r\n             return response.data\r\n         })\r\n     }\r\n }\r\n\r\n export const authAPI = {\r\n     me() {\r\n         return instance.get('auth/me')\r\n     },\r\n     login(email, password, rememberMe = false) {\r\n         return instance.post('auth/login', { email, password, rememberMe })\r\n     },\r\n     logout() {\r\n         return instance.delete('auth/login')\r\n     }\r\n }\r\n\r\n\r\n\r\n\r\n export default userAPI;","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst LISTEN_POST = 'LISTEN-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SET_PHOTO = 'SET_PHOTO';\r\nconst SET_DELETE_POST = 'SET_DELETE_POST';\r\nlet initialState = {\r\n    myPosts: [\r\n        { message: 'Hi, were are you from?', id: 1, like: 15, dislike: 12 },\r\n        { message: 'Did you hear about 1-ARspacePlanet?', id: 2, like: 21, dislike: 12 },\r\n        { message: 'Did you hear about teenHool?', id: 2, like: 21, dislike: 12 },\r\n        { message: 'Did you hear about 134-space-dimantion?', id: 2, like: 21, dislike: 12 },\r\n        { message: 'Did you hear about AlphaPlanet?', id: 2, like: 21, dislike: 12 },\r\n        { message: 'Did you hear about BetaPlanet?', id: 2, like: 21, dislike: 12 },\r\n        { message: 'Did you hear about 09867-spacePlanet?', id: 2, like: 21, dislike: 12 },\r\n        { message: 'Did you hear about gog?', id: 2, like: 21, dislike: 12 },\r\n    ],\r\n    likeCount: {\r\n        count: 0\r\n    },\r\n    profile: null,\r\n    status: \"Space and Race\",\r\n    photo: {}\r\n}\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    myPosts: [...state.myPosts, {  message: action.newPost, id: 5, like: 0, dislike: 0 }]\r\n                }\r\n            }\r\n        case SET_USER_PROFILE:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    profile: action.profile\r\n                }\r\n            }\r\n        case SET_STATUS:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    status: action.status\r\n                }\r\n            }\r\n        case SET_PHOTO:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    photo: action.photo\r\n                }\r\n            }\r\n        case SET_DELETE_POST:\r\n            {\r\n                return {\r\n                    ...state, myPosts: state.myPosts.filter(p => p.id != action.id)\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPost) => ({ type: ADD_POST, newPost });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status: status });\r\nexport const setPhoto = (photo) => ({ type: SET_PHOTO, photo });\r\nexport const deletePost = (id) => ({ type: SET_DELETE_POST, id });\r\n\r\nexport const getUserProfile = (userId) =>  async (dispatch) => {\r\n    let response = await profileAPI.getData(userId)\r\n        dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n        dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await  profileAPI.updateStatus(status);\r\n        if (response.resultCode == 0) {\r\n            dispatch(setStatus(response.data));\r\n        }\r\n\r\n}\r\nexport const getPhoto = (photoFile) => (dispatch) => {\r\n    let formData = new FormData();\r\n    formData.append(\"image\", photoFile);\r\n    return profileAPI.uploadPhoto(formData).then(response => {\r\n        if (response.resultCode == 0) {\r\n            dispatch(setPhoto(formData))\r\n        }\r\n    })\r\n}\r\nexport default profileReducer;","import { freindsAPI } from '../api/api'\r\nconst SET_FREINDS_DATA = 'SET_FREINDS_DATA';\r\nlet initialState = {\r\n    /* userOnline: [\r\n         { id: 1, name: 'Alex Ololokin', rating: '15', dateBRTH: '10/02/1984' },\r\n         { id: 2, name: 'Gena Shishkin', rating: '15', dateBRTH: '10/02/1984' },\r\n         { id: 3, name: 'Vanya Gock', rating: '15', dateBRTH: '10/02/1984' },\r\n         { id: 4, name: 'Olesha Gick', rating: '15', dateBRTH: '10/02/1984' }\r\n     ] */\r\n    userData: [],\r\n    totalUserCount: 50,\r\n    isFollowed: null,\r\n    userId: 1\r\n        // pageNumber: 1\r\n}\r\n\r\n\r\nconst navBarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FREINDS_DATA:\r\n            return {\r\n                ...state,\r\n                userData: action.userData\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getFreindsNavbar = (userData) => ({ type: SET_FREINDS_DATA, userData });\r\n\r\nexport const getUsersOnline = (pageNumber, totalUserCount) => {\r\n    return (dispatch) => {\r\n        freindsAPI.getData(pageNumber, totalUserCount).then(response => {\r\n            dispatch(getFreindsNavbar(response.items));\r\n        })\r\n    }\r\n}\r\n\r\nexport default navBarReducer;","export const updateObjectInArray = (items, itemId, objPropName , newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n}","import { userAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utility/object-helpers\";\r\n\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst FOLLOW = 'FOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\r\nconst TOOGLE_IS_FETCHING = 'TOOGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'monkey-space/toggle-is-follow/TOGGLE_IS_FOLLOWING_PROGRESS';\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUserCount: 40,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n                    // users: state.users.map(u => {\r\n                    //     if (u.id === action.userId) {\r\n                    //         return {...u, followed: true }\r\n                    //     }\r\n                    //     return u;\r\n                    // }),\r\n\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n                    // users: state.users.map(u => {\r\n                    //     if (u.id === action.userId) {\r\n                    //         return {...u, followed: false }\r\n                    //     }\r\n                    //     return u;\r\n                    // }),\r\n\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: action.users }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUserCount: action.count\r\n            }\r\n        case TOOGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUser = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage: currentPage });\r\nexport const setTotalCount = (totalUserCount) => ({ type: SET_TOTAL_USER_COUNT, count: totalUserCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOOGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\nexport const getUsersAction = (currentPage, pageSize) => {\r\n    return async(dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage))\r\n        let response = await userAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUser(response.data.items));\r\n        dispatch(setTotalCount(response.data.totalCount));\r\n    }\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async(dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\n\r\n\r\nexport const follow = (userId) => {\r\n    return async(dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, userAPI.followUsers.bind(userId), followSuccess)\r\n            // dispatch(toggleFollowingProgress(true, userId));\r\n            // let response = await apiMethod(userId);\r\n            //     if (response.resultCode == 0) {\r\n            //         dispatch(actionCreator(userId));\r\n            //     }\r\n            //     dispatch(toggleFollowingProgress(false, userId));\r\n\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async(dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, userAPI.unfollowUsers.bind(userId), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.userData\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    userData: {userId, email, login, isAuth}\r\n});\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return authAPI.me().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n    })\r\n}\r\n//acync await`ы заменили then\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error'\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n\r\n}\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n\r\n    let promise = await dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(\r\n        () => {\r\n            dispatch(initializedSuccess())\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport default appReducer;","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\r\nimport dialogReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport navBarReducer from \"./navbar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport gamesReducer from \"./games-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\nexport let reducers = combineReducers({\r\n    dialogPage: dialogReducer,\r\n    profilePage: profileReducer,\r\n    navBar: navBarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    games: gamesReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n// window.store = store;\r\nexport default store;","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport img from '../../assets/img/space_monkey_logo.jpg';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src={img}/>\r\n            <div className={classes.login}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} <br/> <NavLink onClick={props.logout}>Log Out</NavLink></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer'\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n   \r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\nexport default connect(mapStateToProps, {logout} )(HeaderContainer);\r\n","import React, {useState, useEffect} from 'react';\r\nimport classes from './User.module.css';\r\nimport userOnlineIMG from \"../../../../assets/img/user1.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nconst User = (props) => {\r\n    let [page, setPage] = useState(false)\r\n    useEffect(() => {\r\n            if (window.location === '/profile/' + props.id) {\r\n                window.location = \"\"\r\n            }\r\n    }, [page]\r\n    )\r\n\r\n\r\n\r\n    return (\r\n        //переход по Id не работает на странице профиля ! Загадка (связано с тем что мы изменяем только хвост урла {но это не точно})\r\n        <NavLink to={'/profile/' + props.id} onclick={()=> setPage(true)}>\r\n            <div className={classes.user__block}>\r\n            <div className={classes.user__img}><img src={userOnlineIMG}/></div>\r\n            <label>{props.name}</label>\r\n        </div>\r\n            {page && <Redirect to={'/profile/' + props.id}/>}\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport classes from './UserOnline.module.css';\r\nimport User from \"./User/User\";\r\n\r\nconst UserOnline = (props) => {\r\nlet dataOnlineUser = props.freindsOnline.map(online => \r\n    <>\r\n         {online.followed ?  <User name={online.name} id={online.id}/> : null}\r\n    </> \r\n    \r\n   );\r\n    return (\r\n        <div className={classes.user__block}>\r\n             {dataOnlineUser}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserOnline;\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport UserOnline from \"./UserOnline\";\r\nimport {getFreindsNavbar, getUsersOnline} from \"../../../redux/navbar-reducer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {freindsAPI} from '../../../api/api'\r\n\r\nclass FreindOnline extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props) \r\n    // }\r\n    componentDidMount() {\r\n        let pageNumber = 1;\r\n        // axios.get('https://social-network.samuraijs.com/api/1.0/users?page=' + pageNumber+ '&count=' + this.props.totalUserCount, {withCredentials: true}).\r\n        const {totalUserCount} = this.props\r\n        this.props.getUsersOnline(pageNumber, totalUserCount);\r\n        \r\n    }\r\nrender(){\r\n    return ( <UserOnline {...this.props}/> )\r\n}\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    freindsOnline: state.navBar.userData,\r\n    totalUserCount: state.navBar.totalUserCount,\r\n    userId: state.navBar.userId\r\n})\r\n\r\nlet freindsDataComponentContainer = withRouter(FreindOnline);\r\nexport default connect(mapStateToProps, {getFreindsNavbar, getUsersOnline})(freindsDataComponentContainer);\r\n","import React from 'react';\r\nimport classes from './Nav.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport UserOnlineContainer from \"./UserOnline/UserOnlineContainer\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.active}> Profile </NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.active}> Messages </NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/news\" activeClassName={classes.active}> News </NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/music\" activeClassName={classes.active}> Music </NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/games\" activeClassName={classes.active}> Games </NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/users\" activeClassName={classes.active}> Users </NavLink>\r\n            </div>\r\n            <div className={classes.settings}>\r\n                <NavLink to=\"/settings\" activeClassName={classes.active}> Settings </NavLink>\r\n            </div>\r\n<UserOnlineContainer/>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst News = () => {\r\n//     let name = 'Bill';\r\n// console.log(upperName, 'Hello ${name}');\r\n    \r\n// function upperName (literal, value) {\r\n//         console.log(literal, value);\r\n//     }\r\n    return (\r\n        <div >\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default News;\r\n","import React from 'react';\nimport classes from './Music.module.css';\n\nconst Music = () => {\n    return (\n        <div >\n\n        </div>\n    );\n}\nexport default Music;\n","import React from 'react';\nimport classes from './Settings.module.css';\n\nconst Settings = () => {\n    return (\n        <div >\n\n        </div>\n    );\n}\nexport default Settings;\n","import React from 'react';\nimport classes from './Item.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Item = (props) => {\n    let linkPath = '/dialogs/' + props.id;\n    return (\n        <div className={classes.dialog__item}>\n            <NavLink to={linkPath} className={classes.dialog} activeClassName={classes.active}> {props.username} </NavLink>\n        </div>\n    );\n}\nexport default Item;\n","import React from 'react';\r\nimport Item from \"./Item/Item\";\r\nimport classes from './DialogsItem.module.css'\r\n\r\nconst DialogsItem = (props) => {\r\n    let dataArr = props.state\r\n        .map(dialog =>  <Item username={dialog.name} id={dialog.id} />\r\n        );\r\n    return (\r\n        <div className={classes.dialog}>\r\n            {dataArr}\r\n        </div>\r\n    );\r\n}\r\nexport default DialogsItem;\r\n","import React from 'react';\nimport classes from './Message.module.css';\n\nconst Message = (props) => {\n    return (\n        <li className={classes.messages}>\n            <div className={classes.message}>\n                {props.message}\n            </div>\n        </li>\n    );\n}\nexport default Message;\n","import React from 'react';\r\nimport classes from './MessageItem.module.css';\r\nimport Message from \"./Message/Message\";\r\nconst MessageItem = (props) => {\r\n        let messData = props.state.map(mess => <Message message={mess.message} />)\r\n    return (\r\n        <ul className={classes.messages}>\r\n            {messData}\r\n        </ul>\r\n    );\r\n}\r\nexport default MessageItem;\r\n","export  const required = value => {\r\n    if (value) return undefined;\r\n    return \"OOpss... Field is required\"\r\n}\r\n\r\n\r\nexport const maxLength = (lengthNumber) => (value) => {\r\n    if (value && value.length > lengthNumber) return \"Max length is\" + lengthNumber + \"sumbols\";\r\n    return undefined\r\n}","import React from 'react';\r\nimport classes from './index.module.css'\r\nimport Field from \"redux-form/es/Field\";\r\nimport {required} from \"../../../utility/validation\";\r\n\r\nexport const createField = (placeholder, name, type, componentName, validate, props = {}, text = \"\" ) => {\r\n   return <div><Field placeholder={placeholder} name={name} type={type} component={componentName} validate={validate}\r\n                 {...props} /> {text} </div>\r\n}\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \" \")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span className={classes.errorText}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst adaptFileEventToValue = delegate => e => delegate(e.target.files[0]);\r\n\r\nexport const FileInput = ({\r\n                       input: { value: omitValue, onChange, onBlur, ...inputProps },\r\n                       meta: omitMeta,\r\n                       ...props\r\n                   }) => {\r\n    return (\r\n        <input\r\n            onChange={adaptFileEventToValue(onChange)}\r\n            onBlur={adaptFileEventToValue(onBlur)}\r\n            type=\"file\"\r\n            {...props.input}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n","import React from 'react';\r\nimport classes from './TextArea.module.css';\r\nimport {Field, reduxForm} from \"redux-form/lib/immutable\";\r\nimport {maxLength, required} from \"../../../utility/validation\";\r\nimport {Textarea} from \"../../common/FormControls\";\r\nconst maxLengthNumber20 = maxLength(20)\r\nconst TextArea = (props) => {\r\n    let addNewMess = (values) => {\r\n        if(values.newMess !== undefined) {\r\n            props.addMessage(values.newMess);\r\n            values.newMess = \"\"\r\n        }\r\n    }\r\n    return (\r\n        <TextAreaFormRedux onSubmit={addNewMess}/>\r\n\r\n    )\r\n}\r\nconst TextAreaForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div className={classes.area__mess}>\r\n                    <Field name='newMess' component={Textarea} className={classes.input__mess} validate={[maxLengthNumber20, required]}/>\r\n                    <div>\r\n                        <button className={classes.btn__add}>Send Message</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst TextAreaFormRedux = reduxForm({form: 'addNewMess'})(TextAreaForm)\r\nexport default TextArea;","import { createSelector } from 'reselect'\r\n\r\nexport const getUsers = (state) => {\r\n        return state.usersPage.users\r\n    }\r\n    // export const getUsers = createSelector(getUsersSelector, (users) => {\r\n    //     return users\r\n    // })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.usersPage.totalUserCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getToggleIfFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getProfileInfo = (state) => {\r\n    return state.profilePage.profile;\r\n}\r\n\r\nexport const getProfileStatus = (state) => {\r\n    return state.profilePage.status\r\n}\r\n\r\nexport const getAuthUserId = (state) => {\r\n    return state.auth.userId\r\n}\r\n\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const getDialogPage = (state) => {\r\n    return state.dialogPage\r\n}\r\n\r\nexport const getProfilePage = (state) => {\r\n    return state.profilePage\r\n}","import React from 'react';\r\nimport classes from './TextArea.module.css';\r\nimport {addMessActionCreator} from \"../../../redux/dialogs-reducer\";\r\nimport TextArea from \"./TextArea\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {getDialogPage} from \"../../../redux/users-selectors\";\r\n\r\n// const TextAreaContainer = (props) => {\r\n//     let valueMess = props.state.dialogPage.listenMessage.text;\r\n//     let addMessage = () => {\r\n//         // let text = newMessage.current.value;\r\n//\r\n//         let add = addMessActionCreator();\r\n//         props.dispatch(add);\r\n//         // newMessage.current.value = '';\r\n//\r\n//     }\r\n//     let listenMessage = (text) => {\r\n//         props.dispatch(listenMessActionCreator(text));\r\n//     }\r\n//       return (\r\n//         <TextArea listenMessage={listenMessage} addMessage={addMessage} state = {props.state}/>\r\n//       )\r\n// }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: getDialogPage(state)\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMess) => {\r\n            dispatch(addMessActionCreator(newMess));\r\n    }\r\n    }\r\n}\r\nconst TextAreaContainer = connect(mapStateToProps,mapDispatchToProps)(TextArea);\r\nexport default TextAreaContainer;\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogsItem from \"./DialogItem/DialogsItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport TextAreaContainer from \"./TextArea/TextAreaContainer\";\r\n\r\nconst Dialogs = (props) => {\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <MessageItem\r\n                state = {props.state.dataMess}\r\n            />\r\n            <DialogsItem\r\n                state = {props.state.dataUser}\r\n            />\r\n            <TextAreaContainer\r\n               dispatch={props.dispatch}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state) => (\r\n    { isAuth: state.auth.isAuth}\r\n)\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render()\r\n        {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n   return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogPage} from \"../../redux/users-selectors\";\r\n\r\nlet mapStateToProps = (state) => (\r\n     {\r\n        state: getDialogPage(state)\r\n    }\r\n)\r\nexport default compose (connect(mapStateToProps),withAuthRedirect)(Dialogs)\r\n","import React, {useState} from \"react\";\r\nimport classes from './Paginator.module.css';\r\n\r\nlet Paginator = ({totalItemCount, pageSize, currentPage, onPageChanged}) => {\r\n    let pageCount = Math.ceil(totalItemCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let [currentLeftPage, setCurrentLeftPage] = useState(1);\r\n    let [currentRightPage, setCurrentRightPage] = useState(pageSize)\r\n    let lastPage = currentRightPage + pageSize < pageCount\r\n    let goToNext = () => {\r\n        setCurrentRightPage(currentRightPage + pageSize);\r\n        setCurrentLeftPage(currentLeftPage + pageSize)\r\n    }\r\n    let goToPrev = () => {\r\n        setCurrentRightPage(currentRightPage - pageSize);\r\n        setCurrentLeftPage(currentLeftPage - pageSize)\r\n    }\r\n    //some logic to toggle array of numbers\r\n    return (\r\n            <div className={classes.pagination}>\r\n                {currentLeftPage > 1 && <div onClick={goToPrev}>Prev</div>}\r\n                <div>{pages.filter(p=> p<= currentRightPage && p >= currentLeftPage).map(p => {\r\n                    return <span className={currentPage === p && classes.currentPage}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}</div>\r\n                {lastPage && <div onClick={goToNext}>Next</div>}\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Paginator\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from './Users.module.css';\r\nimport userDefault from '../../assets/img/user.jpg';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {userAPI} from '../../api/api';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nlet User = (props) => {\r\n\r\n    return (\r\n\r\n       <div className={classes.wrapUsr} >\r\n\r\n                <div className={classes.leftClmn}>\r\n                    <div className={classes.avaUsr}>\r\n                        <NavLink to={'/profile/' + props.user.id}>\r\n\r\n                            <img src={props.user.photos.small !== null ? props.user.photos.small : userDefault}/></NavLink>\r\n                    </div>\r\n                    {props.user.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === props.user.id)} onClick={() => {\r\n                            props.unfollow(props.user.id);\r\n\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === props.user.id)} onClick={() => {\r\n                            props.follow(props.user.id);\r\n\r\n\r\n                        }}> Follow</button>\r\n                    }\r\n\r\n                </div>\r\n                <div className={classes.rightClmn}>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.lInfo}>\r\n                            <div className={classes.usrName}> {props.user.name}  </div>\r\n                            <div className={classes.usrStatus}> {props.user.status}  </div>\r\n                        </div>\r\n                        <div className={classes.rInfo}>\r\n                            <div className={classes.usrName}> {'props.user.location.country'}  </div>\r\n                            <div className={classes.usrName}> {'props.user.location.city'}  </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n    )\r\n}\r\nexport default User;","import React from \"react\";\r\nimport classes from './Users.module.css';\r\nimport userDefault from '../../assets/img/user.jpg';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {userAPI} from '../../api/api';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = (props) => {\r\n    // let pageCount = Math.ceil(props.totalUserCount / props.pageSize);\r\n    // let pages = [];\r\n    // for (let i = 1; i <= pageCount; i++) {\r\n    //     pages.push(i);\r\n    // }\r\n    return (\r\n        <div className={classes.user}>\r\n            <Paginator totalItemCount={props.totalUserCount} pageSize={props.pageSize} onPageChanged={props.onPageChanged} currentPage={props.currentPage}/>\r\n            {props.users.map(u => <User user={u} key={u.id} {...props} />)}\r\n        </div>\r\n    )\r\n}\r\nexport default Users;","import React from 'react';\r\nimport preloader from '../../img/loader.svg'\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <img src={preloader} />\r\n        \r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport Preloader from '../../assets/common/Preloader/Preloader';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress, getUsersAction,\r\n\r\n} from \"../../redux/users-reducer\";\r\nimport {\r\n    getCurrentPage, getFollowingProgress,\r\n    getPageSize,\r\n    getToggleIfFetching,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersComponent extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props) \r\n    // }\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsersAction(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsersAction(pageNumber, this.props.pageSize);\r\n        //         // this.props.toggleIsFetching(true);\r\n        //         // this.props.setCurrentPage(pageNumber);\r\n        //         // // axios.get('https://social-network.samuraijs.com/api/1.0/users?page=' + pageNumber+ '&count=' + this.props.pageSize, {withCredentials: true})\r\n        //         // userAPI.getUsers(pageNumber, this.props.pageSize).then(response => {\r\n        //         //     this.props.toggleIsFetching(false);\r\n        //         //     this.props.setUser(response.items);\r\n        //         // })\r\n    }\r\nsetCurrentPage = (currentPage) => {\r\n    this.props.getUsersAction(currentPage);\r\n    return currentPage\r\n}\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalUserCount={this.props.totalUserCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       setCurrentPage={this.setCurrentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                       followingInProgress={this.props.followingInProgress}\r\n\r\n                />\r\n            </>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getToggleIfFetching(state),\r\n        followingInProgress: getFollowingProgress(state)\r\n    }\r\n}\r\nconst UsersContainer = connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsersAction\r\n})(UsersComponent);\r\nexport default UsersContainer;","import React from 'react';\r\nimport classes from './ProfileStatus.module.css'\r\n\r\n\r\n class ProfileStatus extends React.Component {\r\n      state = {\r\n        status: this.props.props,\r\n        editMode: false\r\n     }\r\n     activateEditMode = () => {\r\n        this.setState(\r\n            {\r\n                editMode: true\r\n            }\r\n        )\r\n     }\r\n    deactivateEditMode = () => {\r\n        this.setState(\r\n            {\r\n                editMode: false\r\n            }\r\n        );\r\n        this.props.updateStatus(this.state.status);\r\n        }\r\n     onStatusChange = (e) => {\r\n         this.setState({\r\n             status: e.currentTarget.value\r\n         })\r\n\r\n     }\r\n     componentDidUpdate(prevProps, prevState) {\r\n          if (prevProps.props !== this.props.props) {\r\n             this.setState({\r\n                 status:this.props.props\r\n             })\r\n          }\r\n     }\r\n\r\n     render() {\r\n    return (\r\n        <div>\r\n            {this.state.editMode ?\r\n            <div><input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} className={classes.status}/></div>\r\n            :\r\n            <div> <span onDoubleClick={this.activateEditMode}>{this.state.status}</span></div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n }\r\n\r\n export default ProfileStatus;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport avatar from '../../../assets/img/avatar2.jpg'\r\nimport Preloader from '../../../assets/common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus'\r\nimport Field from \"redux-form/es/Field\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {FileInput} from \"../../common/FormControls\";\r\n\r\n\r\n//можно писать что-то типа const UploadPhotoForm = ({profile, status, updateStatus}) => { *и я обязательно буду так делать в будущем*\r\n\r\nconst UploadPhotoForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n          <Field name='photoInput' component={FileInput}/>  <br/>\r\n            <button type=\"submit\">upload</button>\r\n        </form>\r\n        )\r\n\r\n}\r\nconst UploadPhotoFormRedux = reduxForm({form: 'uploadPhoto'})(UploadPhotoForm)\r\nconst ProfileInfo = (props) => {\r\n    let uploadThisPhoto = (values) => {\r\n        props.getPhoto(values.photoInput);\r\n        alert('I`m genius нах*й!' + values.photoInput)\r\n    }\r\n    if (!props.profile)\r\n        return (\r\n            <Preloader/>\r\n        )\r\n    return (\r\n        <div className={classes.main_block}>\r\n            <UploadPhotoFormRedux onSubmit={uploadThisPhoto}/>\r\n            <div className={`${classes.active} ${classes.content_status}`}><span>\r\n                {/*{props.profile.aboutMe !==null ? props.profile.aboutMe : }*/}\r\n                <ProfileStatus props={props.status} updateStatus={props.updateStatus}/></span></div>\r\n            <div className={classes.avatar}><img\r\n                src={props.profile.photos.small !== null ? props.profile.photos.small : avatar}/></div>\r\n            <div className={classes.info}>\r\n                <span>Name: {props.profile.fullName}</span>\r\n                <span>Planet: 1AR-starRace</span>\r\n                <span>Mission: {props.profile.lookingForAJobDescription}</span>\r\n                <span>contacts: {props.profile.contacts.instagram} </span>\r\n                <span>Web Site: www.&67!@=-`0929_______=-0</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n","import React from 'react';\r\nimport classes from './Post.module.css';\r\nimport ava from './img/avatar1.jpg';\r\n\r\n\r\nconst Post = (props) => {\r\n    // let addLike = () => {\r\n    //     // likeActionCreator(count)\r\n    // }\r\n    return (\r\n        <div className={classes.post}>\r\n            <div className={classes.ava}><img src={ava}/></div>\r\n            <div className={classes.post_text}>\r\n                {props.message}\r\n            </div>\r\n            <div className={classes.like}> <span><span>{props.like}</span>like<i></i></span> </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport Field from \"redux-form/es/Field\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormControls\";\r\nimport {maxLength, required} from \"../../../utility/validation/index\"\r\n\r\nconst maxLengthNumber10 = maxLength(10)\r\n\r\nconst MyPostsForm = (props) => {\r\n\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.my_posts}>\r\n            <h2>You can create your own post</h2>\r\n            <div className={classes.post_area}>\r\n                <Field component={Textarea} name=\"newPostBody\" validate={[maxLengthNumber10, required]}/>\r\n                {/*value={props.profilePage.listenPost}*/}\r\n                <button>Great Create!</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\nconst MyPostsFormRedux = reduxForm({form: 'addPostBody'})(MyPostsForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let dataPosts = props.profilePage.myPosts.map(post => <Post message={post.message} like={post.like}\r\n                                                                id={post.id}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        if (values.newPostBody !== undefined) {\r\n            props.addPost(values.newPostBody);\r\n            values.newPostBody = \"\"\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <MyPostsFormRedux onSubmit={addNewPost}/>\r\n            <div className={classes.reverse__post}>{dataPosts}</div>\r\n        </div>\r\n\r\n    );\r\n}\r\n)\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport {getProfilePage} from \"../../../redux/users-selectors\";\r\n\r\n// const MyPostsContainer = (props) => {\r\n//     let addPost = () => {\r\n//         props.dispatch(addPostActionCreator());\r\n//     }\r\n//\r\n//     let listenPost = (text) => {\r\n//         props.dispatch(listenPostActionCreator(text));\r\n//     }\r\n//     return (\r\n//         <MyPosts listenPost={listenPost} addPost={addPost} state={props.state}/>\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: getProfilePage(state)\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {getPhoto} from \"../../redux/profile-reducer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} getPhoto={props.getPhoto} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getPhoto, getStatus, getUserProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getAuthUserId, getIsAuth, getProfileInfo, getProfileStatus} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n            // userId = 1625;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\n// let AithRedirectComponent = (props) => {\r\n//     if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n//     return <ProfileContainer {...props} />\r\n// }\r\nlet mapStateToProps = (state) => ({\r\n    profile: getProfileInfo(state),\r\n    status: getProfileStatus(state),\r\n    authorizedUserId: getAuthUserId(state),\r\n    isAuth: getIsAuth(state)\r\n})\r\n\r\nexport default compose(connect(mapStateToProps,{getUserProfile, getStatus, updateStatus, getPhoto}),withAuthRedirect,withRouter)(ProfileContainer)","import React from 'react';\r\nimport classes from './Login.module.css';\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {reduxForm} from \"redux-form\";\r\n// import Field from \"redux-form/es/Field\";\r\nimport {createField, Input} from \"../common/FormControls\";\r\nimport {required} from \"../../utility/validation\";\r\nimport Field from \"redux-form/es/Field\";\r\n\r\n\r\nconst FormLogin = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.form}>\r\n            <Field placeholder={\"login\"} name={\"email\"} type=\"text\" component={Input} validate={[required]}/>\r\n            <Field placeholder={\"password\"} name={\"pass\"} type=\"password\" component={Input} validate={[required]}/>\r\n            <div className={classes.checkbox}>\r\n                <Field name={\"rememberMe\"} id=\"remember\" type={\"checkbox\"} component={Input}/>\r\n                <label htmlFor=\"#remember\">Remeber Me in flash photography & screens</label>\r\n            </div>\r\n            {props.error && <div className={classes.formHasError}>\r\n                {props.error}\r\n            </div>}\r\n            <button type={\"submit\"} label=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n}\r\nconst Login = (props) => {\r\n    if (props.isAuth) return <Redirect to={'/profile'} />\r\n    const getLoginData = (formData) => {\r\n        props.login(formData.email, formData.pass, true)\r\n        // if (isAuth) return <Redirect to={'/profile'} />\r\n    }\r\n    return (\r\n        <div className={classes.login}>\r\n            <h1>& now you gonna Log In</h1>\r\n            <LoginReduxForm onSubmit={getLoginData}/>\r\n        </div>\r\n    );\r\n}\r\nconst LoginReduxForm = reduxForm({form: 'loginForm'})(FormLogin)\r\nexport default Login;\r\n\r\n\r\n\r\n{/*<form onSubmit={handleSubmit} className={classes.form}>*/}\r\n{/*    {createField (\"login\", \"email\", \"text\", Input, [required] , {id: \"importantId\"})}*/}\r\n{/*    /!*<Field placeholder={\"login\"} name={\"email\"} type=\"text\" component={Input} validate={[required]}/>*!/*/}\r\n{/*    /!*<Field placeholder={\"password\"} name={\"pass\"} type=\"password\" component={Input} validate={[required]}/>*!/*/}\r\n{/*    {createField (\"password\", \"pass\", \"password\", Input, [required] )}*/}\r\n{/*    <div className={classes.checkbox}>*/}\r\n{/*        /!*<Field name={\"rememberMe\"} id=\"remember\" type={\"checkbox\"} component={Input}/>*!/*/}\r\n{/*        {createField (\"checkbox\", \"rememberMe\", \"checkbox\", \"checkbox\", [required] )}*/}\r\n\r\n{/*        /!*<label htmlFor=\"#remember\">Remeber Me in flash photography & screens</label>*!/*/}\r\n{/*    </div>*/}\r\n{/*    { error && <div className={classes.formHasError}>*/}\r\n{/*        {error}*/}\r\n{/*    </div>}*/}\r\n{/*    <button>Submit</button>*/}\r\n{/*</form>*/}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport LoginPage from \"./Login\"\r\n\r\nlet state = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst LoginContainer = connect(state, {login})(LoginPage);\r\nexport default LoginContainer;","// import {hungryCat} from \"../../assets/img/hungryCat.jpg\"\r\nimport React from 'react';\r\nimport classes from './Games.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Games = (props) => {\r\n    \r\n\r\n    return (\r\n        <div className={classes.gameBlock}>\r\n        <NavLink to=\"/space_animals\">  <div>Space Animals</div> </NavLink>\r\n        <NavLink to=\"/cat_eat_brad\">  <div>Cat eat brad</div> </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Games;","import React from 'react';\r\n\r\nconst withSuspense = (Component) => {\r\n   return (props) => {\r\n       return   <React.Suspense fallback={<div>Wait, please... </div>} > <Component {...props} /> </React.Suspense>\r\n   }\r\n}\r\n\r\nexport default withSuspense","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport LoginPage from './components/Login/LoginContainer'\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport { compose } from \"redux\";\r\nimport withRouter from \"react-router-dom/es/withRouter\";\r\nimport { initializeApp } from \"./redux/app-reducer\";\r\nimport Preloader from \"./assets/common/Preloader/Preloader\";\r\nimport Games from \"./components/Games/Games\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/redux-store\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport withSuspense from \"./hoc/withSuspense\";\r\n\r\nconst CatEatBradContainer = React.lazy(() =>\r\n    import ('./components/Games/CatEatBrad/CatEatBradContainer'));\r\n\r\nconst SpaceAnimalsContainer = React.lazy(() =>\r\n    import (\"./components/Games/SpaceAnimals/SpaceAnimalsContainer\"));\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n            //если ты вылогинен, то ничего не работает (это было из-за рефакторинга компоненты логина)\r\n            // if (!this.props.isAuth) {\r\n            //     // return <Redirect to={'/profile'} />\r\n            //\r\n            // }\r\n            // else {\r\n            //\r\n            // }\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader / >\r\n        }\r\n        return ( <\r\n            div className = 'app-wrapper' >\r\n            <\r\n            HeaderContainer / >\r\n            <\r\n            Nav / >\r\n            <\r\n            div className = \"app-wrapper-content\" >\r\n            <\r\n            Route path = \"/dialogs\"\r\n            render = {\r\n                () => < DialogsContainer / > }\r\n            /> <\r\n            Route path = \"/profile/:userId?\"\r\n            render = {\r\n                () => < ProfileContainer / > }\r\n            /> <\r\n            Route path = \"/news\"\r\n            render = {\r\n                () => < News / > }\r\n            /> <\r\n            Route path = \"/music\"\r\n            render = {\r\n                () => < Music / > }\r\n            /> <\r\n            Route path = \"/games\"\r\n            render = {\r\n                () => < Games / > }\r\n            /> <\r\n            Route path = \"/users\"\r\n            render = {\r\n                () => < UsersContainer / > }\r\n            /> <\r\n            Route path = \"/setttings\"\r\n            render = {\r\n                () => < Settings / > }\r\n            /> <\r\n            Route path = \"/login\"\r\n            render = {\r\n                () => < LoginPage / > }\r\n            /> <\r\n            Route path = \"/space_animals\"\r\n            render = { withSuspense(SpaceAnimalsContainer) }\r\n            /> <\r\n            Route path = \"/cat_eat_brad\"\r\n            render = { withSuspense(CatEatBradContainer) }\r\n            /> <\r\n            /div> <\r\n            /div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { initializeApp }))(App);\r\n\r\nconst MonkeySpaceApp = (props) => {\r\n    return <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Provider store = { store } >\r\n        <AppContainer />\r\n        </Provider> </HashRouter >\r\n};\r\n\r\n\r\nexport default MonkeySpaceApp;","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './redux/redux-store'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport MonkeySpaceApp from \"./App\";\r\n// import {default} from \"react-redux/es/utils/Subscription\";\r\n        ReactDOM.render(\r\n            <MonkeySpaceApp />, document.getElementById('root'))\r\n\r\n\r\n        // rerenderEntireTree(store.getState());\r\n        // store.subscribe(() => {\r\n        //         let state = store.getState();\r\n        //         rerenderEntireTree(state)\r\n        //     })\r\n            // If you want your app to work offline and load faster, you can change\r\n            // unregister() to register() below. Note this comes with some pitfalls.\r\n            // Learn more about service workers: https://bit.ly/CRA-PWA\r\n        serviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_status\":\"ProfileInfo_content_status__2tZ5k\",\"active\":\"ProfileInfo_active__1BrUo\",\"avatar\":\"ProfileInfo_avatar__1oQDy\",\"info\":\"ProfileInfo_info__3lueS\",\"main_block\":\"ProfileInfo_main_block__1iELM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__mess\":\"TextArea_input__mess__1ym6v\",\"area__mess\":\"TextArea_area__mess__2NUs7\",\"btn__add\":\"TextArea_btn__add__33wUV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__JRWP6\",\"post_text\":\"Post_post_text__WZW4y\",\"ava\":\"Post_ava__1_W6V\",\"like\":\"Post_like__37WZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3rcmu\",\"form\":\"Login_form__VOqQz\",\"checkbox\":\"Login_checkbox__3hXbg\",\"formHasError\":\"Login_formHasError__3veS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog__item\":\"Item_dialog__item__3jADz\",\"dialog\":\"Item_dialog__jyzNE\",\"active\":\"Item_active__1hfhJ\"};"],"sourceRoot":""}